---
# vars file for k8s On Ubuntu or Rocky-Linux/Centos/Redhat
#
######################################################
# Common variables
#
# Kubernetes version to be installed.
# Ensure that cri-o minor version is the same as Kubernetes
# Available version of Kubernetes and cri-o can be found using :
# curl -s https://packages.cloud.google.com/apt/dists/kubernetes-xenial/main/binary-amd64/Packages | grep Version | awk '{print $2}'
# https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:
k8s_version: "1.23"
# To display the ansible facts while running the playbook, set the following variable to "yes"
k8s_display_facts: "no"
# To reset the cluster, set the following variable to "yes"
k8s_reset_cluster: "yes"
# Kubernetes pods subnet
# Ensure that the specified range doesn't overlap with other enterprise subnets so that no routing ambiguity exists in the pods.
k8s_pods_subnet: "10.100.0.0/16"
# Kubernetes services subnet
# Ensure that the specified range doesn't overlap with other enterprise subnets so that no routing ambiguity exists in the pods.
k8s_services_subnet: "10.200.0.0/16"
# Parameters to set in Kubelet config file instead of passing them as deprecated command line arguments
k8s_cluster_kubelet_configfile: "/etc/kubernetes/cluster-kubelet-config.yaml"
k8s_cgroup_driver: "systemd"
# Arguments to pass to kubelet process
k8s_kubelet_extraargs: "--cgroup-driver=systemd'"
#k8s_kubelet_extraargs: "--cgroup-driver=systemd --container-runtime=remote --container-runtime-endpoint='unix:///var/run/crio/crio.sock'"
#k8s_kubelet_extraargs: "--config={{ k8s_cluster_kubelet_configfile }} --container-runtime=remote --container-runtime-endpoint='unix:///var/run/crio/crio.sock'"
# Destination file to contain aforementioned arguments
k8s_kubelet_extraargs_destfile: "/etc/default/kubelet"
# Local directory and files containing the command to be run on worker nodes to join the cluster
k8s_join_dir: "/B13/IAC/ANSIBLE/Kubernetes-cluster-deployment"
#k8s_join_master_file: "k8s_masters_join.txt"
k8s_join_worker_file: "k8s_workers_join.txt"
# Local directory which will contain kubeconfig file to be used to connect to the cluster
k8s_kubeconfig_dir: "/B13/IAC/ANSIBLE/Kubernetes-cluster-deployment"
#ansible_user: "user1" # Use become_user from hosts inventory file instead
#
# End of common varibles
######################################################
######################################################
# CentOS specific
#
# Is selinux installed ?
centos_selinux: "yes"
# Define if selinux state must be "enforcing", "permissive" or "disabled" after cluster activation
centos_selinux_state: "enforcing"
# yum repository for Kubernetes
centos_k8s_reponame1: "kubernetes"
centos_k8s_repobaseurl1: "https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64"
centos_k8s_repogpgkey1: "https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package
-key.gpg"
centos_k8s_repodesc1: "Kubernetes repository"
# Packages to be installed
# tc utility required by kubeadm
centos_tc_pkgname: "iproute-tc"
#centos_kubeadm_pkgname: "kubeadm={{ k8s_version }}"
#centos_kubelet_pkgname: "kubelet={{ k8s_version }}"
#centos_kubectl_pkgname: "kubectl={{ k8s_version }}"
centos_kubeadm_pkgname: "kubeadm"
centos_kubelet_pkgname: "kubelet"
centos_kubectl_pkgname: "kubectl"
#
# End of CentOS specific
######################################################

######################################################
# Ubuntu specific
#
# Is selinux installed ?
ubuntu_selinux: "no"
# Define if selinux state must be "enforcing", "permissive" or "disabled" after cluster activation
ubuntu_selinux_state: "enforcing"
# Kubernetes repository for Ubuntu
ubuntu_k8s_repourl1: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
ubuntu_k8s_gpgkey1: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
ubuntu_k8s_repofilename1: "kubernetes-{{k8s_version}}"
#ubuntu_kubeadm_pkgname: "kubeadm={{ k8s_version }}"
#ubuntu_kubelet_pkgname: "kubelet={{ k8s_version }}"
#ubuntu_kubectl_pkgname: "kubectl={{ k8s_version }}"
ubuntu_kubeadm_pkgname: "kubeadm"
ubuntu_kubelet_pkgname: "kubelet"
ubuntu_kubectl_pkgname: "kubectl"
#
# End of Ubuntu specific
######################################################

